{"version":3,"sources":["../../server/app.js"],"names":["app","use","stream","json","urlencoded","extended","then"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AAEA;;;;AACA;;;;AAEA;;;;AAEA,MAAMA,MAAM,wBAAZ;;AAEAA,IAAIC,GAAJ,CAAQ,sBAAO,KAAP,EAAc,EAAE,UAAU,iBAAOC,MAAnB,EAAd,CAAR;AACAF,IAAIC,GAAJ,CAAQ,qBAAWE,IAAX,EAAR;AACAH,IAAIC,GAAJ,CAAQ,qBAAWG,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;AACAL,IAAIC,GAAJ,CAAQ,6BAAR;;AAEAD,IAAIC,GAAJ,CAAQ,GAAR;AACAD,IAAIC,GAAJ,CAAQ,aAAR;;AAEA;AACAD,IAAIC,GAAJ;;AAEA;AACAD,IAAIC,GAAJ;;AAEA;AACA;;kBACe,MAAM,oBAChBK,IADgB,CAEb,MAAMN,GAFO,C","file":"app.js","sourcesContent":["import express from 'express';\nimport morgan from 'morgan';\nimport cookieParser from 'cookie-parser';\nimport bodyParser from 'body-parser';\n\nimport mainRouter from './routes/index';\nimport usersRouter from './routes/someModels';\n\nimport connectToDb from './config/db';\nimport logger from './config/logger';\n\nimport { errorHandler, notFoundHandler } from './middlewares';\n\nconst app = express();\n\napp.use(morgan(\"dev\", { \"stream\": logger.stream }));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(cookieParser());\n\napp.use('/', mainRouter);\napp.use('/someModels', usersRouter);\n\n// catch 404 and forward to error handler\napp.use(notFoundHandler);\n\n// error handler\napp.use(errorHandler);\n\n// anything that bootstraps the express app will first connect to the database and then have access to the app object\n// This way, we can query the database anywhere else in our code and expect to have already connected\nexport default () => connectToDb()\n    .then(\n        () => app\n    );\n"]}