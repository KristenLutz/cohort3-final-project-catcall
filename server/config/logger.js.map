{"version":3,"sources":["../../../server/config/logger.js"],"names":["emitErrs","logDir","resolve","dirname","__filename","existsSync","mkdirSync","logger","Logger","transports","File","level","filename","join","handleExceptions","json","maxsize","maxFiles","colorize","Console","exitOnError","stream","write","message","encoding","info"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,kBAAQA,QAAR,GAAmB,IAAnB;;AAEA,MAAMC,SAAS,eAAKC,OAAL,CACX,eAAKC,OAAL,CAAaC,UAAb,CADW,EACc,IADd,EACoB,IADpB,EAC0B,MAD1B,CAAf;;AAIA;AACA;AACA,IAAI,CAAC,aAAGC,UAAH,CAAcJ,MAAd,CAAL,EAA4B;AACxB,iBAAGK,SAAH,CAAaL,MAAb;AACH;;AAED,IAAIM,SAAS,IAAI,kBAAQC,MAAZ,CAAmB;AAC5BC,gBAAY,CACR,IAAI,kBAAQA,UAAR,CAAmBC,IAAvB,CAA4B;AACxBC,eAAO,MADiB;AAExBC,kBAAU,eAAKC,IAAL,CAAUZ,MAAV,EAAkB,cAAlB,CAFc;AAGxBa,0BAAkB,IAHM;AAIxBC,cAAM,KAJkB;AAKxBC,iBAAS,OALe,EAKN;AAClBC,kBAAU,CANc;AAOxBC,kBAAU;AAPc,KAA5B,CADQ,EAUR,IAAI,kBAAQT,UAAR,CAAmBU,OAAvB,CAA+B;AAC3BR,eAAO,OADoB;AAE3BG,0BAAkB,IAFS;AAG3BC,cAAM,KAHqB;AAI3BG,kBAAU;AAJiB,KAA/B,CAVQ,CADgB;AAkB5BE,iBAAa;AAlBe,CAAnB,CAAb;;AAqBA;AACAb,OAAOc,MAAP,GAAgB;AACZC,WAAO,UAASC,OAAT,EAAkBC,QAAlB,EAA4B;AAC/BjB,eAAOkB,IAAP,CAAYF,OAAZ;AACH;AAHW,CAAhB;;kBAMehB,M","file":"logger.js","sourcesContent":["import winston from 'winston';\nimport fs from 'fs';\nimport path from 'path';\n\nwinston.emitErrs = true;\n\nconst logDir = path.resolve(\n    path.dirname(__filename),'..', '..', 'logs'\n);\n\n// Generally we don't like doing synchronous things with Node, BUT since this will only happen once, when\n// file gets used for the first time, it's okay\nif (!fs.existsSync(logDir)) {\n    fs.mkdirSync(logDir);\n}\n\nlet logger = new winston.Logger({\n    transports: [\n        new winston.transports.File({\n            level: 'info',\n            filename: path.join(logDir, 'all-logs.log'),\n            handleExceptions: true,\n            json: false,\n            maxsize: 5242880, // 5MB limit\n            maxFiles: 5,\n            colorize: false\n        }),\n        new winston.transports.Console({\n            level: 'debug',\n            handleExceptions: true,\n            json: false,\n            colorize: true\n        })\n    ],\n    exitOnError: false\n});\n\n// modify the winston logger to make it compatible with morgan's request logger\nlogger.stream = {\n    write: function(message, encoding) {\n        logger.info(message);\n    }\n};\n\nexport default logger;\n\n"]}