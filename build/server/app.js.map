{"version":3,"sources":["../../server/app.js"],"names":["app","use","stream","json","urlencoded","extended","process","env","npm_lifecycle_event","endsWith","req","res","next","header","then"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AAEA;;;;AACA;;;;AAEA;;;;AAEA,MAAMA,MAAM,wBAAZ;;AAEAA,IAAIC,GAAJ,CAAQ,uBAAR;;AAEAD,IAAIC,GAAJ,CAAQ,sBAAO,KAAP,EAAc,EAAE,UAAU,iBAAOC,MAAnB,EAAd,CAAR;AACAF,IAAIC,GAAJ,CAAQ,qBAAWE,IAAX,EAAR;AACAH,IAAIC,GAAJ,CAAQ,qBAAWG,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;AACAL,IAAIC,GAAJ,CAAQ,6BAAR;;AAEA,IAAIK,QAAQC,GAAR,CAAYC,mBAAZ,CAAgCC,QAAhC,CAAyC,KAAzC,CAAJ,EAAqD;AACjDT,QAAIC,GAAJ,CAAQ,UAASS,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC7B;AACAD,YAAIE,MAAJ,CAAW,6BAAX,EAA0C,uBAA1C;AACAF,YAAIE,MAAJ,CAAW,8BAAX,EAA2C,gDAA3C;AACAD;AACH,KALD;AAMH;;AAEDZ,IAAIC,GAAJ,CAAQ,GAAR;AACAD,IAAIC,GAAJ,CAAQ,iBAAR;;AAEA;AACAD,IAAIC,GAAJ;;AAEA;AACAD,IAAIC,GAAJ;;AAEA;AACA;;kBACe,MAAM,oBAChBa,IADgB,CAEb,MAAMd,GAFO,C","file":"app.js","sourcesContent":["import express from 'express';\nimport morgan from 'morgan';\nimport cookieParser from 'cookie-parser';\nimport bodyParser from 'body-parser';\nimport helmet from 'helmet';\n\nimport mainRouter from './routes/index';\nimport usersRouter from './routes/someModels';\n\nimport connectToDb from './config/db';\nimport logger from './config/logger';\n\nimport { errorHandler, notFoundHandler } from './middlewares';\n\nconst app = express();\n\napp.use(helmet());\n\napp.use(morgan(\"dev\", { \"stream\": logger.stream }));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(cookieParser());\n\nif (process.env.npm_lifecycle_event.endsWith('dev')) {\n    app.use(function(req, res, next) {\n        // allow requests from the dev server\n        res.header('Access-Control-Allow-Origin', 'http://localhost:3000');\n        res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept');\n        next();\n    });\n}\n\napp.use('/', mainRouter);\napp.use('/api/someModels', usersRouter);\n\n// catch 404 and forward to error handler\napp.use(notFoundHandler);\n\n// error handler\napp.use(errorHandler);\n\n// anything that bootstraps the express app will first connect to the database and then have access to the app object\n// This way, we can query the database anywhere else in our code and expect to have already connected\nexport default () => connectToDb()\n    .then(\n        () => app\n    );\n"]}