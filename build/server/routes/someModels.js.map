{"version":3,"sources":["../../../server/routes/someModels.js"],"names":["router","Router","get","req","res","next","find","then","someModels","status","send","catch","err","post","someModel","name","params","save","delete","remove"],"mappings":";;;;;;AAAA;;;;AAEA;;;;;;AAEA,MAAMA,SAAS,kBAAQC,MAAR,EAAf;;AAEA;AACAD,OAAOE,GAAP,CAAW,GAAX,EAAgB,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AACrC,WAAO;AACH;AADG,KAEFC,IAFE,CAEG,EAFH,EAGFC,IAHE,CAICC,cAAcJ,IACTK,MADS,CACF,GADE,EACG;AADH,KAETC,IAFS,CAEJF,UAFI,CAJf,EAQFG,KARE,CAQIC,OAAOP,KAAKO,GAAL,CARX,CAAP,CADqC,CASP;AACjC,CAVD;;AAYA;AACAZ,OAAOa,IAAP,CAAY,QAAZ,EAAsB,UAASV,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC3C,UAAMS,YAAY,wBAAc,EAAEC,MAAMZ,IAAIa,MAAJ,CAAWD,IAAnB,EAAd,CAAlB;;AAEAD,cAAUG,IAAV,GACKV,IADL,CAEQ,MAAMH,IACDK,MADC,CACM,GADN,EACW;AADX,KAEDC,IAFC,CAEK,6CAA4CP,IAAIa,MAAJ,CAAWD,IAAK,qCAFjE,CAFd,EAMKJ,KANL,CAMWC,OAAOP,KAAKO,GAAL,CANlB;AAOH,CAVD;;AAYA;AACAZ,OAAOkB,MAAP,CAAc,QAAd,EAAwB,UAASf,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC7C,wBAAUc,MAAV,CAAiB,EAACJ,MAAMZ,IAAIa,MAAJ,CAAWD,IAAlB,EAAjB,EACKR,IADL,CAEQ,MAAMH,IACDK,MADC,CACM,GADN,EACW;AADX,KAEDC,IAFC,CAEK,6CAA4CP,IAAIa,MAAJ,CAAWD,IAAK,qCAFjE,CAFd,EAMKJ,KANL,CAMWC,OAAOP,KAAKO,GAAL,CANlB,EAD6C,CAOf;AACjC,CARD;;kBAUeZ,M","file":"someModels.js","sourcesContent":["import express from 'express';\n\nimport SomeModel from '../models/someModel';\n\nconst router = express.Router();\n\n/* GET someModels listing. */\nrouter.get('/', function(req, res, next) {\n    return SomeModel\n        // we are providing the empty object to mean we are not giving any constraints -- we want them all!\n        .find({})\n        .then(\n            someModels => res\n                .status(200) // explicitly set the status code to 200 to indicate the request was successful\n                .send(someModels)\n        )\n        .catch(err => next(err)); // if we get an error, propagate the error to the next middleware\n});\n\n/* POST a someModel. (This will create one in the database, if successful) */\nrouter.post('/:name', function(req, res, next) {\n    const someModel = new SomeModel({ name: req.params.name });\n\n    someModel.save()\n        .then(\n            () => res\n                .status(201) // explicitly set the status code to 201 to indicate an entry was successfully created\n                .send(`Successfully created the model with name '${req.params.name}'! Try and view all the models now!`)\n        )\n        .catch(err => next(err));\n});\n\n/* DELETE a someModel. (This will remove one in the database, if successful) */\nrouter.delete('/:name', function(req, res, next) {\n    SomeModel.remove({name: req.params.name})\n        .then(\n            () => res\n                .status(200) // explicitly set the status code to 201 to indicate the request was successful\n                .send(`Successfully removed the model with name '${req.params.name}'! Try and view all the models now!`)\n        )\n        .catch(err => next(err)); // if we get an error, propagate the error to the next middleware\n});\n\nexport default router;\n\n"]}